diff -aur iksemel/src/io.c iksemel-ipv6/src/io.c
--- iksemel/src/io.c	Fri May 25 23:05:50 2001
+++ iksemel-ipv6/src/io.c	Tue Jul  2 01:50:03 2002
@@ -44,8 +44,11 @@
 
 int iks_connect_tcp(iksparser *prs, char *server, int port)
 {
-	struct hostent *host;
-	struct sockaddr_in sin;
+	struct addrinfo hints;
+	struct addrinfo *addr_res;
+	struct addrinfo *addr_ptr;
+	int error_code;
+	char port_str[6];
 	struct iksconn *j;
 	int tmp;
 
@@ -79,31 +82,51 @@
 
 	if(port == 0) port = IKS_JABBER_PORT;
 
-	host = gethostbyname(server);
-	if(!host)
+	hints.ai_flags = AI_CANONNAME;
+	hints.ai_family = PF_UNSPEC;
+	hints.ai_socktype = SOCK_STREAM;
+	hints.ai_protocol = 0;
+	hints.ai_addrlen = 0;
+	hints.ai_canonname = NULL;
+	hints.ai_addr = NULL;
+	hints.ai_next = NULL;
+
+	sprintf(port_str, "%i", port);
+
+	error_code = getaddrinfo(server, port_str, &hints, &addr_res);
+	if (error_code != 0)
 	{
 		iks_disconnect(prs);
 		return 0;
 	}
-	memcpy(&sin.sin_addr, host->h_addr, host->h_length);
-	sin.sin_family = host->h_addrtype;
-	sin.sin_port = htons(port);
 
-	j->sock = socket(host->h_addrtype, SOCK_STREAM, 0);
-	if(j->sock < 0)
+	addr_ptr = addr_res;
+
+	while (addr_ptr)
 	{
-		iks_disconnect(prs);
-		return 0;
+		j->sock = socket(addr_ptr->ai_family, addr_ptr->ai_socktype, addr_ptr->ai_protocol);
+		if (j->sock != -1)
+		{
+			tmp = connect(j->sock, addr_ptr->ai_addr, addr_ptr->ai_addrlen);
+			if (tmp != -1)
+			{
+				break;
+			}
+
+		}
+
+		addr_ptr = addr_ptr->ai_next;
 	}
-	set_nonblock(j->sock, 1);
 
-	tmp = connect(j->sock, (struct sockaddr *)&sin, sizeof(struct sockaddr_in));
-	if(tmp == -1 && errno != EINPROGRESS)
+	freeaddrinfo(addr_res);
+
+	if (!addr_ptr)
 	{
 		iks_disconnect(prs);
 		return 0;
 	}
 
+	set_nonblock(j->sock, 1);
 	return 1;
 }
 
